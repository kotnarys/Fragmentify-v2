{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n","export const REQUEST_CONTEXT = \"request\";\n","import EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n  PendingRequestTypes,\n  ProposalTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n  TYPE_1,\n  getRequiredNamespacesFromNamespaces,\n  isValidObject,\n  isValidRequestExpiry,\n} from \"@walletconnect/utils\";\nimport {\n  SESSION_EXPIRY,\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const { reject, resolve, done: approval } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId }, expiry);\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    this.client.events.emit(\"session_request_sent\", { topic, request, chainId });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params, expiry) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    this.client.core.history.set(topic, payload);\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n        await this.deleteSession(topic);\n      });\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      await this.setPendingSessionRequest({ id, topic, params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n      \"requiredNamespaces\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    // if the length of the namespaces is greater than the length of the required namespaces\n    // then the user is trying to approve part or all of the optional namespaces so we need to validate\n    if (Object.keys(namespaces).length > Object.keys(proposal.requiredNamespaces).length) {\n      // filter out the optional namespaces that are not being used\n      const namespacesToValidate = Object.keys(proposal.optionalNamespaces).filter(\n        (namespace) => namespaces[namespace],\n      );\n      const usedOptionalNamespaces = {};\n      for (const key in proposal.optionalNamespaces) {\n        if (namespacesToValidate.includes(key)) {\n          usedOptionalNamespaces[key] = proposal.optionalNamespaces[key];\n        }\n      }\n      const conformingNamespacesError = isConformingNamespaces(\n        usedOptionalNamespaces,\n        namespaces,\n        \"approve()\",\n        \"optionalNamespaces\",\n      );\n      if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n      \"requiredNamespaces\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import pino from \"pino\";\nimport { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","requestId","acknowledged","reason","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","expirerHasDeleted","self","pendingRequest","method","payload","formatJsonRpcRequest","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","_topic","RELAYER_EVENTS","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","namespacesToValidate","namespace","usedOptionalNamespaces","key","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":";;;;;;;;;AAEa,MAAA,oBAAA,CAAuB,KACvB,mBAAsB,CAAA,CAAA,CACtB,oBAAsB,QAEtB,CAAA,0BAAA,CAA6B,CAAG,EAAA,oBAAA,CAAA,CAAA,EAAwB,mBAAuB,CAAA,CAAA,EAAA,mBAAA,CAAA,CAAA,CAAA,CAE/E,oBAAsB,CACjC,IAAA,CAAM,oBACN,MAAQ,CAAA,OAAA,CACR,WAAY,CACZ,CAAA,CAAA,QAAA,CAAU,+BACZ,CAAA,CAEa,kBAA2E,CAAA,CACtF,iBAAkB,kBAClB,CAAA,cAAA,CAAgB,iBAChB,cAAgB,CAAA,gBAAA,CAChB,aAAc,cACd,CAAA,cAAA,CAAgB,gBAChB,CAAA,cAAA,CAAgB,gBAChB,CAAA,eAAA,CAAiB,kBACjB,oBAAsB,CAAA,sBAAA,CACtB,cAAe,eACf,CAAA,eAAA,CAAiB,iBACnB,CAEa,CAAA,2BAAA,CAA8B,CACzC,QAAA,CAAU,UACZ;;AC9BO,MAAM,cAAiB,CAAA,CAC5B,OAAS,CAAA,iBAAA,CACT,OAAS,CAAA,iBAAA,CACT,OAAS,CAAA,iBAAA,CACT,IAAM,CAAA,cACR,CAEa,CAAA,eAAA,CAAkB,UAElB,uBAA0B,CAAA;;ACP1B,MAAA,gBAAA,CAAmB,WAEnB,eAAkBA,CAAAA;;ACFlB,MAAA,eAAA,CAAkB,UAElB,cAAiBC,CAAAA;;ACDvB,MAAM,eAAiB,QAEjB,CAAA,eAAA,CAA0C,CACrD,iBAAmB,CAAA,CACjB,IAAK,CACH,GAAA,CAAKC,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,gBAAkB,CAAA,CAChB,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,gBAAkB,CAAA,CAChB,IAAK,CACH,GAAA,CAAKC,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,gBAAkB,CAAA,CAChB,IAAK,CACH,GAAA,CAAKA,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,iBAAmB,CAAA,CACjB,IAAK,CACH,GAAA,CAAKD,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,eAAiB,CAAA,CACf,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,aACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EAEA,gBAAkB,CAAA,CAChB,IAAK,CACH,GAAA,CAAKC,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,QACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,EACA,cAAgB,CAAA,CACd,IAAK,CACH,GAAA,CAAKC,eACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CAAA,CACA,IAAK,CACH,GAAA,CAAKA,eACL,MAAQ,CAAA,CAAA,CAAA,CACR,IAAK,IACP,CACF,CACF,CAEa,CAAA,iCAAA,CAAoC,CAC/C,GAAKF,CAAAA,YAAAA,CACL,IAAKD,UACP;;AC5GO,MAAM,eAAkB,CAAA;;ACA/B,IAAA,CAAA,CAAA,MAAA,CAAA,cAAA,CAAA,CAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,yBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,oeI,SAAAA,OAAQ,CAOlC,WAAA,CAAYC,EAA2B,CACrC,KAAA,CAAMA,CAAM,CAAA,CAPd,IAAO,CAAA,IAAA,CAAOC,cAEd,CAAA,IAAA,CAAQ,OAAwB,IAAIC,CAAAA,CACpC,IAAQ,CAAA,WAAA,CAAc,CACtB,CAAA,CAAA,IAAA,CAAQ,mBAAsB,CAAA,CAACC,MAAM,CAMrC,CAAA,IAAA,CAAO,IAAwB,CAAA,SAAY,CACpC,IAAA,CAAK,WACR,GAAA,MAAM,KAAK,OAAQ,EAAA,CACnB,IAAK,CAAA,qBAAA,EACL,CAAA,IAAA,CAAK,qBAAsB,EAAA,CAC3B,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,CAAE,OAAS,CAAA,MAAA,CAAO,KAAKC,eAAe,CAAE,CAAC,CAAA,CAC3E,IAAK,CAAA,WAAA,CAAc,CAEvB,CAAA,EAAA,CAAA,CAIA,KAAO,OAA8B,CAAA,MAAOC,CAAW,EAAA,CACrD,IAAK,CAAA,aAAA,EACL,CAAA,MAAMC,EAAgBC,CAAAC,CAAAA,CAAAA,CAAA,EACjBH,CAAAA,CAAAA,CAAAA,CADiB,CAEpB,kBAAA,CAAoBA,CAAO,CAAA,kBAAA,EAAsB,EACjD,CAAA,kBAAA,CAAoBA,CAAO,CAAA,kBAAA,EAAsB,EACnD,CACA,CAAA,CAAA,MAAM,KAAK,cAAeC,CAAAA,CAAa,CACvC,CAAA,KAAM,CAAE,YAAA,CAAAG,CAAc,CAAA,kBAAA,CAAAC,EAAoB,kBAAAC,CAAAA,CAAAA,CAAoB,iBAAAC,CAAAA,CAAAA,CAAmB,MAAAC,CAAAA,CAAO,CACtFP,CAAAA,CAAAA,CACF,IAAIQ,CAAQL,CAAAA,CAAAA,CACRM,CACAC,CAAAA,CAAAA,CAAS,CAOb,CAAA,CAAA,GALIF,CAEFE,GAAAA,CAAAA,CADgB,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,GAAA,CAAIF,CAAK,CAAA,CAC1C,QAGf,CAACA,CAAAA,EAAS,CAACE,CAAAA,CAAQ,CACrB,KAAM,CAAE,KAAA,CAAOC,EAAU,GAAKC,CAAAA,CAAO,CAAI,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QACxEJ,CAAAA,CAAAA,CAAQG,CACRF,CAAAA,CAAAA,CAAMG,EACR,CAEA,MAAMC,CAAAA,CAAY,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,eAAgB,EAAA,CAE1DC,CAAWZ,CAAAA,CAAAA,CAAA,CACf,kBAAAE,CAAAA,CAAAA,CACA,kBAAAC,CAAAA,CAAAA,CACA,MAAQE,CAAAA,CAAAA,EAAA,IAAAA,CAAAA,CAAAA,CAAU,CAAC,CAAE,QAAA,CAAUQ,wBAAyB,CAAC,CACzD,CAAA,QAAA,CAAU,CACR,SAAA,CAAAF,EACA,QAAU,CAAA,IAAA,CAAK,MAAO,CAAA,QACxB,CACIP,CAAAA,CAAAA,CAAAA,EAAqB,CAAE,iBAAA,CAAAA,CAAkB,CAAA,CAAA,CAEzC,CAAE,MAAA,CAAAU,CAAQ,CAAA,OAAA,CAAAC,CAAS,CAAA,IAAA,CAAMC,CAAS,CAAIC,CAAAA,oBAAAA,EAyB5C,CAAA,GAxBA,IAAK,CAAA,MAAA,CAAO,IACVC,CAAAA,WAAAA,CAAY,iBAAiB,CAC7B,CAAA,MAAO,CAAE,KAAA,CAAAC,CAAO,CAAA,OAAA,CAAAC,CAAQ,CAAA,GAAM,CAC5B,GAAID,CAAAA,CAAOL,CAAOK,CAAAA,CAAK,CACdC,CAAAA,KAAAA,GAAAA,CAAAA,CAAS,CAChBA,CAAAA,CAAQ,KAAK,SAAYT,CAAAA,CAAAA,CACzB,MAAMU,CAAAA,CAAkBtB,CAAAC,CAAAA,CAAAA,CAAA,EACnBoB,CAAAA,CAAAA,CAAAA,CADmB,CAEtB,kBAAoBA,CAAAA,CAAAA,CAAQ,kBAC5B,CAAA,kBAAA,CAAoBA,CAAQ,CAAA,kBAC9B,CACA,CAAA,CAAA,MAAM,KAAK,MAAO,CAAA,OAAA,CAAQ,GAAIA,CAAAA,CAAAA,CAAQ,KAAOC,CAAAA,CAAe,CAC5D,CAAA,MAAM,KAAK,SAAUD,CAAAA,CAAAA,CAAQ,KAAOA,CAAAA,CAAAA,CAAQ,MAAM,CAAA,CAC9Cd,CACF,EAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,cAAe,CAAA,CAC5C,KAAAA,CAAAA,CAAAA,CACA,SAAUc,CAAQ,CAAA,IAAA,CAAK,QACzB,CAAC,CAEHL,CAAAA,CAAAA,CAAQM,CAAe,EACzB,CACF,CACF,CAAA,CAEI,CAACf,CAAAA,CAAO,CACV,KAAM,CAAE,OAAA,CAAAgB,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,iBAAmB,CAAA,CAAA,yBAAA,EAA4BjB,CAAO,CAAA,CAAA,CAAA,CAC3F,MAAM,IAAI,MAAMgB,CAAO,CACzB,CAEA,MAAME,CAAK,CAAA,MAAM,IAAK,CAAA,WAAA,CAAYlB,EAAO,mBAAqBM,CAAAA,CAAQ,CAEhEa,CAAAA,CAAAA,CAASC,UAAWtC,CAAAA,YAAY,CACtC,CAAA,OAAA,MAAM,KAAK,WAAYoC,CAAAA,CAAAA,CAAIxB,CAAA,CAAA,CAAE,EAAAwB,CAAAA,CAAAA,CAAI,MAAAC,CAAAA,CAAAA,CAAAA,CAAWb,EAAU,CAC/C,CAAA,CAAE,GAAAL,CAAAA,CAAAA,CAAK,QAAAS,CAAAA,CAAS,CACzB,CAAA,CAEA,IAAO,CAAA,IAAA,CAAwB,MAAOnB,CAAAA,GACpC,IAAK,CAAA,aAAA,EACE,CAAA,MAAM,KAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAKA,CAAM,CAAA,CAAA,CAGnD,IAAO,CAAA,OAAA,CAA8B,MAAOA,CAAW,EAAA,CACrD,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,IAAK,CAAA,cAAA,CAAeA,CAAM,CAChC,CAAA,KAAM,CAAE,EAAA,CAAA2B,CAAI,CAAA,aAAA,CAAAG,CAAe,CAAA,UAAA,CAAAC,EAAY,iBAAAxB,CAAAA,CAAkB,CAAIP,CAAAA,CAAAA,CACvDe,CAAW,CAAA,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,IAAIY,CAAE,CAAA,CAC5C,GAAI,CAAE,YAAAvB,CAAAA,CAAAA,CAAc,QAAA4B,CAAAA,CAAAA,CAAU,mBAAA3B,CAAoB,CAAA,kBAAA,CAAAC,CAAmB,CAAA,CAAIS,CAEpEkB,CAAAA,aAAAA,CAAc5B,CAAkB,CAAA,GACnCA,EAAqB6B,mCAAoCH,CAAAA,CAAAA,CAAY,WAAW,CAAA,CAAA,CAGlF,MAAMI,CAAAA,CAAgB,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,eAAA,EAC9CC,CAAAA,CAAAA,CAAgBJ,CAAS,CAAA,SAAA,CACzBK,EAAe,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,iBAAA,CACjDF,CACAC,CAAAA,CACF,EAEIhC,CAAgBuB,EAAAA,CAAAA,GAClB,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,cAAA,CAAe,CAC5C,KAAOvB,CAAAA,CAAAA,CACP,QAAU4B,CAAAA,CAAAA,CAAS,QACrB,CAAC,CACD,CAAA,MAAM,KAAK,UAAgCL,CAAAA,CAAAA,CAAIvB,CAAc,CAAA,CAC3D,KAAO,CAAA,CACL,QAAU0B,CAAAA,CAAAA,EAAA,KAAAA,CAAiB,CAAA,KAC7B,CACA,CAAA,kBAAA,CAAoBK,CACtB,CAAC,CACD,CAAA,MAAM,KAAK,MAAO,CAAA,QAAA,CAAS,MAAOR,CAAAA,CAAAA,CAAIW,WAAY,CAAA,mBAAmB,CAAC,CAAA,CACtE,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,CAAE,KAAOlC,CAAAA,CAAa,CAAC,CAAA,CAAA,CAGjE,MAAMmC,CAAAA,CAAgBpC,CAAA,CAAA,CACpB,KAAO,CAAA,CAAE,SAAU2B,CAAA,EAAA,IAAA,CAAAA,CAAiB,CAAA,KAAM,CAC1C,CAAA,UAAA,CAAAC,CACA,CAAA,kBAAA,CAAA1B,EACA,kBAAAC,CAAAA,CAAAA,CACA,UAAY,CAAA,CAAE,SAAW6B,CAAAA,CAAAA,CAAe,QAAU,CAAA,IAAA,CAAK,OAAO,QAAS,CAAA,CACvE,MAAQN,CAAAA,UAAAA,CAAWW,cAAc,CAAA,CAAA,CAC7BjC,CAAqB,EAAA,CAAE,kBAAAA,CAAkB,CAAA,CAAA,CAE/C,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,SAAA,CAAU8B,CAAY,CACrD,CAAA,MAAMI,CAAY,CAAA,MAAM,IAAK,CAAA,WAAA,CAAYJ,CAAc,CAAA,kBAAA,CAAoBE,CAAa,CAClF,CAAA,CAAE,IAAMG,CAAAA,CAAAA,CAAc,OAAAxB,CAAAA,CAAAA,CAAS,MAAAD,CAAAA,CAAO,EAAIG,oBAA0C,EAAA,CAC1F,IAAK,CAAA,MAAA,CAAO,IAAKC,CAAAA,WAAAA,CAAY,iBAAmBoB,CAAAA,CAAS,CAAG,CAAA,CAAC,CAAE,KAAA,CAAAnB,CAAM,CAAA,GAAM,CACrEA,CAAAA,CAAOL,EAAOK,CAAK,CAAA,CAClBJ,CAAQ,CAAA,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,GAAImB,CAAAA,CAAY,CAAC,EACpD,CAAC,CAED,CAAA,MAAMd,CAAUrB,CAAAA,CAAAA,CAAAC,CAAA,CAAA,EAAA,CACXoC,GADW,CAEd,KAAA,CAAOF,CACP,CAAA,YAAA,CAAc,CACd,CAAA,CAAA,IAAA,CAAME,CAAc,CAAA,UAAA,CACpB,KAAM,CACJ,SAAA,CAAWP,CAAS,CAAA,SAAA,CACpB,QAAUA,CAAAA,CAAAA,CAAS,QACrB,CAAA,CACA,WAAYG,CACd,CAAA,CAAA,CACA,OAAM,MAAA,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,GAAIE,CAAAA,CAAAA,CAAcd,CAAO,CACnD,CAAA,MAAM,IAAK,CAAA,SAAA,CAAUc,CAAcR,CAAAA,UAAAA,CAAWW,cAAc,CAAC,EACtD,CAAE,KAAA,CAAOH,CAAc,CAAA,YAAA,CAAAK,CAAa,CAC7C,CAEA,CAAA,IAAA,CAAO,MAA4B,CAAA,MAAO1C,CAAW,EAAA,CACnD,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,KAAK,aAAcA,CAAAA,CAAM,CAC/B,CAAA,KAAM,CAAE,EAAA,CAAA2B,CAAI,CAAA,MAAA,CAAAgB,CAAO,CAAI3C,CAAAA,CAAAA,CACjB,CAAE,YAAA,CAAAI,CAAa,CAAA,CAAI,IAAK,CAAA,MAAA,CAAO,SAAS,GAAIuB,CAAAA,CAAE,CAChDvB,CAAAA,CAAAA,GACF,MAAM,IAAA,CAAK,SAAUuB,CAAAA,CAAAA,CAAIvB,EAAcuC,CAAM,CAAA,CAC7C,MAAM,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,MAAOhB,CAAAA,CAAAA,CAAIW,YAAY,mBAAmB,CAAC,CAE1E,EAAA,CAAA,CAEA,IAAO,CAAA,MAAA,CAA4B,MAAOtC,CAAAA,EAAW,CACnD,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,IAAK,CAAA,aAAA,CAAcA,CAAM,CAAA,CAC/B,KAAM,CAAE,KAAA,CAAAS,CAAO,CAAA,UAAA,CAAAsB,CAAW,CAAA,CAAI/B,CACxB2B,CAAAA,CAAAA,CAAK,MAAM,IAAA,CAAK,WAAYlB,CAAAA,CAAAA,CAAO,kBAAoB,CAAA,CAAE,UAAAsB,CAAAA,CAAW,CAAC,CACrE,CAAA,CAAE,IAAMW,CAAAA,CAAAA,CAAc,OAAAxB,CAAAA,CAAAA,CAAS,MAAAD,CAAAA,CAAO,EAAIG,oBAA2B,EAAA,CAC3E,OAAK,IAAA,CAAA,MAAA,CAAO,IAAKC,CAAAA,WAAAA,CAAY,gBAAkBM,CAAAA,CAAE,EAAG,CAAC,CAAE,KAAAL,CAAAA,CAAM,CAAM,GAAA,CAC7DA,CAAOL,CAAAA,CAAAA,CAAOK,CAAK,CAClBJ,CAAAA,CAAAA,GACP,CAAC,CACD,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,QAAQ,MAAOT,CAAAA,CAAAA,CAAO,CAAE,UAAA,CAAAsB,CAAW,CAAC,CAE/C,CAAA,CAAE,aAAAW,CAAa,CACxB,CAEA,CAAA,IAAA,CAAO,MAA4B,CAAA,MAAO1C,CAAW,EAAA,CACnD,KAAK,aAAc,EAAA,CACnB,MAAM,IAAA,CAAK,aAAcA,CAAAA,CAAM,CAC/B,CAAA,KAAM,CAAE,KAAA,CAAAS,CAAM,CAAA,CAAIT,CACZ2B,CAAAA,CAAAA,CAAK,MAAM,IAAA,CAAK,YAAYlB,CAAO,CAAA,kBAAA,CAAoB,EAAE,CACzD,CAAA,CAAE,IAAMiC,CAAAA,CAAAA,CAAc,QAAAxB,CAAS,CAAA,MAAA,CAAAD,CAAO,CAAA,CAAIG,oBAA2B,EAAA,CAC3E,OAAK,IAAA,CAAA,MAAA,CAAO,KAAKC,WAAY,CAAA,gBAAA,CAAkBM,CAAE,CAAA,CAAG,CAAC,CAAE,KAAAL,CAAAA,CAAM,IAAM,CAC7DA,CAAAA,CAAOL,CAAOK,CAAAA,CAAK,CAClBJ,CAAAA,CAAAA,GACP,CAAC,EACD,MAAM,IAAA,CAAK,SAAUT,CAAAA,CAAAA,CAAOoB,UAAWW,CAAAA,cAAc,CAAC,CAAA,CAE/C,CAAE,YAAAE,CAAAA,CAAa,CACxB,CAAA,CAEA,IAAO,CAAA,OAAA,CAA8B,MAAU1C,CAAAA,EAAsC,CACnF,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,IAAK,CAAA,cAAA,CAAeA,CAAM,CAAA,CAChC,KAAM,CAAE,OAAA4C,CAAAA,CAAAA,CAAS,OAAAC,CAAAA,CAAAA,CAAS,KAAApC,CAAAA,CAAAA,CAAO,OAAAmB,CAAO,CAAA,CAAI5B,CACtC2B,CAAAA,CAAAA,CAAK,MAAM,IAAA,CAAK,WAAYlB,CAAAA,CAAAA,CAAO,oBAAqB,CAAE,OAAA,CAAAoC,CAAS,CAAA,OAAA,CAAAD,CAAQ,CAAA,CAAGhB,CAAM,CAAA,CACpF,CAAE,IAAAkB,CAAAA,CAAAA,CAAM,OAAA5B,CAAAA,CAAAA,CAAS,MAAAD,CAAAA,CAAO,CAAIG,CAAAA,oBAAAA,CAAwBQ,CAAM,CAChE,CAAA,OAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAwBP,WAAY,CAAA,iBAAA,CAAmBM,CAAE,CAAA,CAAG,CAAC,CAAE,KAAA,CAAAL,CAAO,CAAA,MAAA,CAAAyB,CAAO,CAAA,GAAM,CACzFzB,CAAAA,CAAOL,EAAOK,CAAK,CAAA,CAClBJ,CAAQ6B,CAAAA,CAAM,EACrB,CAAC,CACD,CAAA,IAAA,CAAK,OAAO,MAAO,CAAA,IAAA,CAAK,sBAAwB,CAAA,CAAE,KAAAtC,CAAAA,CAAAA,CAAO,OAAAoC,CAAAA,CAAAA,CAAS,OAAAD,CAAAA,CAAQ,CAAC,CAAA,CACpE,MAAME,CAAAA,EACf,CAAA,CAEA,KAAO,OAA8B,CAAA,MAAO9C,CAAW,EAAA,CACrD,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,KAAK,cAAeA,CAAAA,CAAM,CAChC,CAAA,KAAM,CAAE,KAAA,CAAAS,CAAO,CAAA,QAAA,CAAAuC,CAAS,CAAIhD,CAAAA,CAAAA,CACtB,CAAE,EAAA,CAAA2B,CAAG,CAAA,CAAIqB,CACXC,CAAAA,eAAAA,CAAgBD,CAAQ,CAC1B,CAAA,MAAM,IAAK,CAAA,UAAA,CAAWrB,CAAIlB,CAAAA,CAAAA,CAAOuC,CAAS,CAAA,MAAM,EACvCE,cAAeF,CAAAA,CAAQ,CAChC,EAAA,MAAM,IAAK,CAAA,SAAA,CAAUrB,CAAIlB,CAAAA,CAAAA,CAAOuC,EAAS,KAAK,CAAA,CAEhD,IAAK,CAAA,2BAAA,CAA4BhD,CAAO,CAAA,QAAA,CAAS,EAAI,CAAA,CAAE,QAAS,WAAa,CAAA,IAAA,CAAM,CAAE,CAAC,EACxF,CAAA,CAEA,IAAO,CAAA,IAAA,CAAwB,MAAOA,CAAAA,EAAW,CAC/C,IAAA,CAAK,aAAc,EAAA,CACnB,MAAM,IAAA,CAAK,YAAYA,CAAM,CAAA,CAC7B,KAAM,CAAE,KAAAS,CAAAA,CAAM,CAAIT,CAAAA,CAAAA,CAClB,GAAI,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,IAAA,CAAK,QAASS,CAAAA,CAAK,CAAG,CAAA,CAC5C,MAAMkB,CAAK,CAAA,MAAM,IAAK,CAAA,WAAA,CAAYlB,CAAO,CAAA,gBAAA,CAAkB,EAAE,EACvD,CAAE,IAAA,CAAAqC,CAAM,CAAA,OAAA,CAAA5B,CAAS,CAAA,MAAA,CAAAD,CAAO,CAAA,CAAIG,sBAClC,CAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAKC,WAAY,CAAA,cAAA,CAAgBM,CAAE,CAAA,CAAG,CAAC,CAAE,KAAA,CAAAL,CAAM,CAAA,GAAM,CAC3DA,CAAAA,CAAOL,CAAOK,CAAAA,CAAK,EAClBJ,CAAQ,GACf,CAAC,CAAA,CACD,MAAM4B,CAAAA,GACR,CAAA,KAAW,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,IAAA,CAAK,QAASrC,CAAAA,CAAK,GAC9D,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAK,CAAE,KAAA,CAAAA,CAAM,CAAC,EAEjD,CAEA,CAAA,IAAA,CAAO,IAAwB,CAAA,MAAOT,CAAW,EAAA,CAC/C,KAAK,aAAc,EAAA,CACnB,MAAM,IAAA,CAAK,WAAYA,CAAAA,CAAM,CAC7B,CAAA,KAAM,CAAE,KAAA,CAAAS,CAAO,CAAA,KAAA,CAAA0C,CAAO,CAAA,OAAA,CAAAP,CAAQ,CAAA,CAAI5C,EAClC,MAAM,IAAA,CAAK,WAAYS,CAAAA,CAAAA,CAAO,iBAAmB,CAAA,CAAE,KAAA0C,CAAAA,CAAAA,CAAO,QAAAP,CAAQ,CAAC,EACrE,CAAA,CAEA,IAAO,CAAA,UAAA,CAAoC,MAAO5C,CAAAA,EAAW,CAC3D,IAAK,CAAA,aAAA,EACL,CAAA,MAAM,IAAK,CAAA,iBAAA,CAAkBA,CAAM,CAAA,CACnC,KAAM,CAAE,KAAAS,CAAAA,CAAM,CAAIT,CAAAA,CAAAA,CACd,IAAK,CAAA,MAAA,CAAO,QAAQ,IAAK,CAAA,QAAA,CAASS,CAAK,CAAA,EACzC,MAAM,IAAA,CAAK,WAAYA,CAAAA,CAAAA,CAAO,mBAAoB6B,WAAY,CAAA,mBAAmB,CAAC,CAAA,CAClF,MAAM,IAAA,CAAK,aAAc7B,CAAAA,CAAK,GAE9B,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,UAAA,CAAW,CAAE,KAAA,CAAAA,CAAM,CAAC,EAEvD,CAEA,CAAA,IAAA,CAAO,IAAyBT,CAAAA,CAAAA,GAC9B,IAAK,CAAA,aAAA,GACE,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,MAAA,EAAS,CAAA,MAAA,CAAQuB,CAAY6B,EAAAA,mBAAAA,CAAoB7B,EAASvB,CAAM,CAAC,CAG9F,CAAA,CAAA,IAAA,CAAO,yBAAkE,CAAA,KACvE,IAAK,CAAA,aAAA,GACE,IAAK,CAAA,MAAA,CAAO,cAAe,CAAA,MAAA,EAKpC,CAAA,CAAA,IAAA,CAAQ,aAAgD,CAAA,MAAOS,CAAO4C,CAAAA,CAAAA,GAAsB,CAC1F,KAAM,CAAE,IAAA,CAAAC,CAAK,CAAA,CAAI,KAAK,MAAO,CAAA,OAAA,CAAQ,GAAI7C,CAAAA,CAAK,CAE9C,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,KAAK,OAAQ,CAAA,WAAA,CAAYA,CAAK,CAAA,CAChD,MAAM,OAAA,CAAQ,GAAI,CAAA,CAChB,KAAK,MAAO,CAAA,OAAA,CAAQ,MAAOA,CAAAA,CAAAA,CAAO6B,WAAY,CAAA,mBAAmB,CAAC,CAAA,CAClE,KAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,aAAA,CAAcgB,CAAK,CAAA,SAAS,CACpD,CAAA,IAAA,CAAK,OAAO,IAAK,CAAA,MAAA,CAAO,YAAa7C,CAAAA,CAAK,CAC1C4C,CAAAA,CAAAA,CAAoB,OAAQ,CAAA,OAAA,GAAY,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,GAAI5C,CAAAA,CAAK,CAC5E,CAAC,EACH,CAEA,CAAA,IAAA,CAAQ,cAAkD,CAAA,MAAOkB,CAAI0B,CAAAA,CAAAA,GAAsB,CACzF,MAAM,OAAQ,CAAA,GAAA,CAAI,CAChB,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,MAAO1B,CAAAA,CAAAA,CAAIW,YAAY,mBAAmB,CAAC,CAChEe,CAAAA,CAAAA,CAAoB,OAAQ,CAAA,OAAA,EAAY,CAAA,IAAA,CAAK,OAAO,IAAK,CAAA,OAAA,CAAQ,GAAI1B,CAAAA,CAAE,CACzE,CAAC,EACH,CAAA,CAEA,KAAQ,2BAA4E,CAAA,MAClFA,CACAgB,CAAAA,CAAAA,CACAU,CAAoB,CAAA,CAAA,CAAA,GACjB,CACH,MAAM,QAAQ,GAAI,CAAA,CAChB,IAAK,CAAA,MAAA,CAAO,cAAe,CAAA,MAAA,CAAO1B,CAAIgB,CAAAA,CAAM,EAC5CU,CAAoB,CAAA,OAAA,CAAQ,OAAQ,EAAA,CAAI,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,IAAI1B,CAAE,CACzE,CAAC,EACH,CAEA,CAAA,IAAA,CAAQ,SAAwC,CAAA,MAAOlB,EAAOmB,CAAW,GAAA,CACnE,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,IAAA,CAAK,QAASnB,CAAAA,CAAK,CACzC,EAAA,MAAM,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,MAAA,CAAOA,CAAO,CAAA,CAAE,OAAAmB,CAAO,CAAC,CAEpD,CAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAInB,EAAOmB,CAAM,EAC5C,CAEA,CAAA,IAAA,CAAQ,WAA4C,CAAA,MAAOD,CAAIZ,CAAAA,CAAAA,GAAa,CAC1E,MAAM,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,GAAIY,CAAAA,CAAAA,CAAIZ,CAAQ,CAAA,CAC3C,KAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAIY,CAAIZ,CAAAA,CAAAA,CAAS,MAAM,EAClD,EAEA,IAAQ,CAAA,wBAAA,CAAsE,MAC5EwC,CAAAA,EACG,CACH,MAAM3B,CAAS7B,CAAAA,eAAAA,CAAgB,kBAAkB,GAAI,CAAA,GAAA,CAC/C,CAAE,EAAA,CAAA4B,CAAI,CAAA,KAAA,CAAAlB,CAAO,CAAA,MAAA,CAAAT,CAAO,CAAIuD,CAAAA,CAAAA,CAC9B,MAAM,IAAA,CAAK,MAAO,CAAA,cAAA,CAAe,GAAI5B,CAAAA,CAAAA,CAAI,CACvC,EAAA,CAAAA,CACA,CAAA,KAAA,CAAAlB,CACA,CAAA,MAAA,CAAAT,CACF,CAAC,EACG4B,CAAQ,EAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAID,CAAIE,CAAAA,UAAAA,CAAWD,CAAM,CAAC,EACjE,CAEA,CAAA,IAAA,CAAQ,WAA4C,CAAA,MAAOnB,CAAO+C,CAAAA,CAAAA,CAAQxD,EAAQ4B,CAAW,GAAA,CAC3F,MAAM6B,CAAAA,CAAUC,oBAAqBF,CAAAA,CAAAA,CAAQxD,CAAM,CAAA,CAC7CyB,EAAU,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAOhB,CAAOgD,CAAAA,CAAO,EAC7DE,CAAO5D,CAAAA,eAAAA,CAAgByD,CAAM,CAAA,CAAE,GACrC,CAAA,OAAI5B,CAAQ+B,GAAAA,CAAAA,CAAK,IAAM/B,CACvB,CAAA,CAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,GAAA,CAAInB,CAAOgD,CAAAA,CAAO,EAC3C,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,OAAQhD,CAAAA,CAAAA,CAAOgB,CAASkC,CAAAA,CAAI,CAC9CF,CAAAA,CAAAA,CAAQ,EACjB,CAAA,CAEA,IAAQ,CAAA,UAAA,CAA0C,MAAO9B,CAAAA,CAAIlB,EAAOsC,CAAW,GAAA,CAC7E,MAAMU,CAAAA,CAAUG,mBAAoBjC,CAAAA,CAAAA,CAAIoB,CAAM,CAAA,CACxCtB,EAAU,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAOhB,CAAOgD,CAAAA,CAAO,EAC7DI,CAAS,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,GAAIpD,CAAAA,CAAAA,CAAOkB,CAAE,CACrDgC,CAAAA,CAAAA,CAAO5D,eAAgB8D,CAAAA,CAAAA,CAAO,OAAQ,CAAA,MAAM,CAAE,CAAA,GAAA,CAEpD,KAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,OAAA,CAAQpD,CAAOgB,CAAAA,CAAAA,CAASkC,CAAI,CAAA,CACrD,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,OAAQF,CAAAA,CAAO,EAChD,CAAA,CAEA,KAAQ,SAAwC,CAAA,MAAO9B,CAAIlB,CAAAA,CAAAA,CAAOa,CAAU,GAAA,CAC1E,MAAMmC,CAAAA,CAAUK,kBAAmBnC,CAAAA,CAAAA,CAAIL,CAAK,CAAA,CACtCG,CAAU,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,KAAK,MAAO,CAAA,MAAA,CAAOhB,CAAOgD,CAAAA,CAAO,CAC7DI,CAAAA,CAAAA,CAAS,MAAM,IAAA,CAAK,OAAO,IAAK,CAAA,OAAA,CAAQ,GAAIpD,CAAAA,CAAAA,CAAOkB,CAAE,CAAA,CACrDgC,CAAO5D,CAAAA,eAAAA,CAAgB8D,EAAO,OAAQ,CAAA,MAAM,CAAE,CAAA,GAAA,CAEpD,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAQpD,CAAOgB,CAAAA,CAAAA,CAASkC,CAAI,CAAA,CACrD,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,QAAQ,OAAQF,CAAAA,CAAO,EAChD,CAAA,CAEA,IAAQ,CAAA,OAAA,CAAoC,SAAY,CACtD,MAAMM,CAA0B,CAAA,EAC1BC,CAAAA,CAAAA,CAAwB,EAAC,CAC/B,IAAK,CAAA,MAAA,CAAO,QAAQ,MAAO,EAAA,CAAE,OAASzC,CAAAA,CAAAA,EAAY,CAC5C0C,SAAAA,CAAU1C,CAAQ,CAAA,MAAM,CAAGwC,EAAAA,CAAAA,CAAc,IAAKxC,CAAAA,CAAAA,CAAQ,KAAK,EACjE,CAAC,CAAA,CACD,KAAK,MAAO,CAAA,QAAA,CAAS,MAAO,EAAA,CAAE,OAASR,CAAAA,CAAAA,EAAa,CAC9CkD,SAAAA,CAAUlD,EAAS,MAAM,CAAA,EAAGiD,CAAY,CAAA,IAAA,CAAKjD,CAAS,CAAA,EAAE,EAC9D,CAAC,EACD,MAAM,OAAA,CAAQ,GAAI,CAAA,CAChB,GAAGgD,CAAAA,CAAc,GAAKtD,CAAAA,CAAAA,EAAU,KAAK,aAAcA,CAAAA,CAAK,CAAC,CAAA,CACzD,GAAGuD,CAAAA,CAAY,GAAKrC,CAAAA,CAAAA,EAAO,KAAK,cAAeA,CAAAA,CAAE,CAAC,CACpD,CAAC,EACH,CAkCA,CAAA,IAAA,CAAQ,oBAA6DwB,CAAU,EAAA,CAC7E,KAAM,CAAE,KAAA1C,CAAAA,CAAAA,CAAO,OAAAgD,CAAAA,CAAQ,EAAIN,CACrBe,CAAAA,CAAAA,CAAYT,CAAQ,CAAA,MAAA,CAE1B,OAAQS,CAAAA,EACN,IAAK,mBACH,CAAA,OAAO,IAAK,CAAA,uBAAA,CAAwBzD,CAAOgD,CAAAA,CAAO,CACpD,CAAA,IAAK,mBACH,OAAO,IAAA,CAAK,sBAAuBhD,CAAAA,CAAAA,CAAOgD,CAAO,CAAA,CACnD,IAAK,kBAAA,CACH,OAAO,IAAK,CAAA,sBAAA,CAAuBhD,CAAOgD,CAAAA,CAAO,CACnD,CAAA,IAAK,kBACH,CAAA,OAAO,KAAK,sBAAuBhD,CAAAA,CAAAA,CAAOgD,CAAO,CAAA,CACnD,IAAK,gBAAA,CACH,OAAO,IAAA,CAAK,qBAAqBhD,CAAOgD,CAAAA,CAAO,CACjD,CAAA,IAAK,kBACH,CAAA,OAAO,IAAK,CAAA,sBAAA,CAAuBhD,EAAOgD,CAAO,CAAA,CACnD,IAAK,mBAAA,CACH,OAAO,IAAA,CAAK,gBAAiBhD,CAAAA,CAAAA,CAAOgD,CAAO,CAC7C,CAAA,IAAK,iBACH,CAAA,OAAO,IAAK,CAAA,qBAAA,CAAsBhD,CAAOgD,CAAAA,CAAO,EAClD,QACE,OAAO,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,IAAA,CAAK,CAA8BS,2BAAAA,EAAAA,CAAAA,CAAAA,CAAW,CAC5E,CACF,CAEA,CAAA,IAAA,CAAQ,oBAA8D,CAAA,MAAOf,CAAU,EAAA,CACrF,KAAM,CAAE,KAAA,CAAA1C,CAAO,CAAA,OAAA,CAAAgD,CAAQ,CAAA,CAAIN,CAErBgB,CAAAA,CAAAA,CAAAA,CADS,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,GAAI1D,CAAAA,CAAAA,CAAOgD,CAAQ,CAAA,EAAE,GAC1C,OAAQ,CAAA,MAAA,CAEjC,OAAQU,CAAAA,EACN,IAAK,mBACH,CAAA,OAAO,KAAK,wBAAyB1D,CAAAA,CAAAA,CAAOgD,CAAO,CAAA,CACrD,IAAK,kBAAA,CACH,OAAO,IAAA,CAAK,wBAAwBhD,CAAOgD,CAAAA,CAAO,CACpD,CAAA,IAAK,kBACH,CAAA,OAAO,IAAK,CAAA,uBAAA,CAAwBhD,EAAOgD,CAAO,CAAA,CACpD,IAAK,kBAAA,CACH,OAAO,IAAA,CAAK,uBAAwBhD,CAAAA,CAAAA,CAAOgD,CAAO,CACpD,CAAA,IAAK,gBACH,CAAA,OAAO,IAAK,CAAA,qBAAA,CAAsBhD,CAAOgD,CAAAA,CAAO,CAClD,CAAA,IAAK,mBACH,CAAA,OAAO,IAAK,CAAA,wBAAA,CAAyBhD,CAAOgD,CAAAA,CAAO,EACrD,QACE,OAAO,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,IAAA,CAAK,CAA+BU,4BAAAA,EAAAA,CAAAA,CAAAA,CAAW,CAC7E,CACF,CAAA,CAIA,IAAQ,CAAA,uBAAA,CAAoE,MAC1E1D,CAAAA,CACAgD,CACG,GAAA,CACH,KAAM,CAAE,MAAA,CAAAzD,CAAQ,CAAA,EAAA,CAAA2B,CAAG,CAAA,CAAI8B,CACvB,CAAA,GAAI,CACF,IAAK,CAAA,cAAA,CAAetD,CAAA,CAAA,EAAA,CAAKsD,CAAQ,CAAA,MAAA,CAAQ,CACzC,CAAA,MAAM7B,EAASC,UAAWtC,CAAAA,YAAY,CAChCwB,CAAAA,CAAAA,CAAWZ,CAAA,CAAA,CAAE,EAAAwB,CAAAA,CAAAA,CAAI,aAAclB,CAAO,CAAA,MAAA,CAAAmB,CAAW5B,CAAAA,CAAAA,CAAAA,CAAAA,CACvD,MAAM,IAAA,CAAK,WAAY2B,CAAAA,CAAAA,CAAIZ,CAAQ,CACnC,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,IAAK,CAAA,kBAAA,CAAoB,CAAE,EAAA,CAAAY,CAAI,CAAA,MAAA,CAAQZ,CAAS,CAAC,EACtE,CAAA,MAASqD,CAAP,CAAA,CACA,MAAM,IAAK,CAAA,SAAA,CAAUzC,CAAIlB,CAAAA,CAAAA,CAAO2D,CAAG,CAAA,CACnC,IAAK,CAAA,MAAA,CAAO,OAAO,KAAMA,CAAAA,CAAG,EAC9B,CACF,CAEA,CAAA,IAAA,CAAQ,wBAAsE,CAAA,MAC5E3D,EACAgD,CACG,GAAA,CACH,KAAM,CAAE,EAAA9B,CAAAA,CAAG,CAAI8B,CAAAA,CAAAA,CACf,GAAIR,eAAgBQ,CAAAA,CAAO,CAAG,CAAA,CAC5B,KAAM,CAAE,MAAAV,CAAAA,CAAO,EAAIU,CACnB,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,KAAM,CAAA,CAAE,IAAM,CAAA,QAAA,CAAU,OAAQ,0BAA4B,CAAA,MAAA,CAAAV,CAAO,CAAC,CACvF,CAAA,MAAMhC,CAAW,CAAA,IAAA,CAAK,OAAO,QAAS,CAAA,GAAA,CAAIY,CAAE,CAAA,CAC5C,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA,CAAM,CAAE,IAAA,CAAM,QAAU,CAAA,MAAA,CAAQ,0BAA4B,CAAA,QAAA,CAAAZ,CAAS,CAAC,EACzF,MAAMoB,CAAAA,CAAgBpB,CAAS,CAAA,QAAA,CAAS,SACxC,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,MAAM,CACvB,IAAA,CAAM,QACN,CAAA,MAAA,CAAQ,0BACR,CAAA,aAAA,CAAAoB,CACF,CAAC,EACD,MAAMC,CAAAA,CAAgBW,CAAO,CAAA,kBAAA,CAC7B,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA,CAAM,CACvB,IAAM,CAAA,QAAA,CACN,MAAQ,CAAA,0BAAA,CACR,aAAAX,CAAAA,CACF,CAAC,CAAA,CACD,MAAMC,CAAe,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,iBACjDF,CAAAA,CAAAA,CACAC,CACF,CACA,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,KAAM,CAAA,CACvB,IAAM,CAAA,QAAA,CACN,OAAQ,0BACR,CAAA,YAAA,CAAAC,CACF,CAAC,CACD,CAAA,MAAMgC,CAAiB,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,SAAUhC,CAAAA,CAAY,CAC5E,CAAA,IAAA,CAAK,OAAO,MAAO,CAAA,KAAA,CAAM,CACvB,IAAA,CAAM,QACN,CAAA,MAAA,CAAQ,0BACR,CAAA,cAAA,CAAAgC,CACF,CAAC,CAAA,CACD,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,QAAA,CAAS,CAAE,KAAA5D,CAAAA,CAAM,CAAC,EACnD,CAAWyC,KAAAA,cAAAA,CAAeO,CAAO,CAAA,GAC/B,MAAM,IAAK,CAAA,MAAA,CAAO,QAAS,CAAA,MAAA,CAAO9B,CAAIW,CAAAA,WAAAA,CAAY,mBAAmB,CAAC,EACtE,IAAK,CAAA,MAAA,CAAO,IAAKjB,CAAAA,WAAAA,CAAY,iBAAiB,CAAA,CAAG,CAAE,KAAA,CAAOoC,EAAQ,KAAM,CAAC,CAE7E,EAAA,CAAA,CAEA,IAAQ,CAAA,sBAAA,CAAkE,MACxEhD,CAAAA,CACAgD,IACG,CACH,KAAM,CAAE,EAAA,CAAA9B,CAAI,CAAA,MAAA,CAAA3B,CAAO,CAAA,CAAIyD,CACvB,CAAA,GAAI,CACF,IAAA,CAAK,2BAA4BzD,CAAAA,CAAM,CACvC,CAAA,KAAM,CACJ,KAAAsE,CAAAA,CAAAA,CACA,UAAAC,CAAAA,CAAAA,CACA,MAAA3C,CAAAA,CAAAA,CACA,UAAAG,CAAAA,CAAAA,CACA,mBAAA1B,CACA,CAAA,kBAAA,CAAAC,CACA,CAAA,iBAAA,CAAAC,CACF,CAAA,CAAIkD,CAAQ,CAAA,MAAA,CACNlC,EAAUpB,CAAA,CAAA,CACd,KAAAM,CAAAA,CAAAA,CACA,KAAA6D,CAAAA,CAAAA,CACA,MAAA1C,CAAAA,CAAAA,CACA,WAAAG,CACA,CAAA,YAAA,CAAc,CACd,CAAA,CAAA,kBAAA,CAAA1B,CACA,CAAA,kBAAA,CAAAC,CACA,CAAA,UAAA,CAAYiE,EAAW,SACvB,CAAA,IAAA,CAAM,CACJ,SAAA,CAAW,EACX,CAAA,QAAA,CAAU,IAAK,CAAA,MAAA,CAAO,QACxB,CACA,CAAA,IAAA,CAAM,CACJ,SAAA,CAAWA,CAAW,CAAA,SAAA,CACtB,QAAUA,CAAAA,CAAAA,CAAW,QACvB,CACIhE,CAAAA,CAAAA,CAAAA,EAAqB,CAAE,iBAAA,CAAAA,CAAkB,CAAA,CAAA,CAE/C,MAAM,IAAA,CAAK,UAA+BkD,CAAAA,CAAAA,CAAQ,EAAIhD,CAAAA,CAAAA,CAAO,CAAI,CAAA,CAAA,CACjE,IAAK,CAAA,MAAA,CAAO,KAAKY,WAAY,CAAA,iBAAiB,CAAG,CAAA,CAAE,OAAAE,CAAAA,CAAQ,CAAC,EAC9D,OAAS6C,CAAP,CAAA,CACA,MAAM,IAAA,CAAK,SAAUzC,CAAAA,CAAAA,CAAIlB,CAAO2D,CAAAA,CAAG,EACnC,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA,CAAMA,CAAG,EAC9B,CACF,CAAA,CAEA,IAAQ,CAAA,uBAAA,CAAoE,MAC1E3D,CAAAA,CACAgD,CACG,GAAA,CACH,KAAM,CAAE,GAAA9B,CAAG,CAAA,CAAI8B,CACXR,CAAAA,eAAAA,CAAgBQ,CAAO,CAAA,EACzB,MAAM,IAAA,CAAK,OAAO,OAAQ,CAAA,MAAA,CAAOhD,CAAO,CAAA,CAAE,YAAc,CAAA,CAAA,CAAK,CAAC,CAAA,CAC9D,KAAK,MAAO,CAAA,IAAA,CAAKY,WAAY,CAAA,iBAAA,CAAmBM,CAAE,CAAA,CAAG,EAAE,CAC9CuB,EAAAA,cAAAA,CAAeO,CAAO,CAAA,GAC/B,MAAM,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,OAAOhD,CAAO6B,CAAAA,WAAAA,CAAY,mBAAmB,CAAC,CACxE,CAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAKjB,YAAY,iBAAmBM,CAAAA,CAAE,CAAG,CAAA,CAAE,KAAO8B,CAAAA,CAAAA,CAAQ,KAAM,CAAC,GAEjF,CAEA,CAAA,IAAA,CAAQ,sBAAkE,CAAA,MACxEhD,CACAgD,CAAAA,CAAAA,GACG,CACH,KAAM,CAAE,MAAAzD,CAAAA,CAAAA,CAAQ,EAAA2B,CAAAA,CAAG,CAAI8B,CAAAA,CAAAA,CACvB,GAAI,CACF,KAAK,aAActD,CAAAA,CAAAA,CAAA,CAAE,KAAA,CAAAM,CAAUT,CAAAA,CAAAA,CAAAA,CAAQ,CACvC,CAAA,MAAM,KAAK,MAAO,CAAA,OAAA,CAAQ,MAAOS,CAAAA,CAAAA,CAAO,CAAE,UAAA,CAAYT,CAAO,CAAA,UAAW,CAAC,CACzE,CAAA,MAAM,IAAK,CAAA,UAAA,CAA+B2B,CAAIlB,CAAAA,CAAAA,CAAO,CAAI,CAAA,CAAA,CACzD,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,IAAA,CAAK,gBAAkB,CAAA,CAAE,EAAAkB,CAAAA,CAAAA,CAAI,MAAAlB,CAAO,CAAA,MAAA,CAAAT,CAAO,CAAC,EACjE,CAAA,MAASoE,CAAP,CAAA,CACA,MAAM,IAAK,CAAA,SAAA,CAAUzC,CAAIlB,CAAAA,CAAAA,CAAO2D,CAAG,CAAA,CACnC,IAAK,CAAA,MAAA,CAAO,OAAO,KAAMA,CAAAA,CAAG,EAC9B,CACF,CAEA,CAAA,IAAA,CAAQ,uBAAoE,CAAA,CAACI,EAAQf,CAAY,GAAA,CAC/F,KAAM,CAAE,EAAA9B,CAAAA,CAAG,CAAI8B,CAAAA,CAAAA,CACXR,gBAAgBQ,CAAO,CAAA,CACzB,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,gBAAkBM,CAAAA,CAAE,EAAG,EAAE,CAC7CuB,CAAAA,cAAAA,CAAeO,CAAO,CAAA,EAC/B,IAAK,CAAA,MAAA,CAAO,KAAKpC,WAAY,CAAA,gBAAA,CAAkBM,CAAE,CAAA,CAAG,CAAE,KAAA,CAAO8B,CAAQ,CAAA,KAAM,CAAC,EAEhF,CAEA,CAAA,IAAA,CAAQ,sBAAkE,CAAA,MACxEhD,CACAgD,CAAAA,CAAAA,GACG,CACH,KAAM,CAAE,EAAA9B,CAAAA,CAAG,CAAI8B,CAAAA,CAAAA,CACf,GAAI,CACF,KAAK,aAAc,CAAA,CAAE,KAAAhD,CAAAA,CAAM,CAAC,CAAA,CAC5B,MAAM,IAAA,CAAK,UAAUA,CAAOoB,CAAAA,UAAAA,CAAWW,cAAc,CAAC,CACtD,CAAA,MAAM,IAAK,CAAA,UAAA,CAA+Bb,EAAIlB,CAAO,CAAA,CAAA,CAAI,CACzD,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,IAAK,CAAA,gBAAA,CAAkB,CAAE,EAAAkB,CAAAA,CAAAA,CAAI,KAAAlB,CAAAA,CAAM,CAAC,EACzD,CAAS2D,MAAAA,CAAAA,CAAP,CACA,MAAM,IAAA,CAAK,SAAUzC,CAAAA,CAAAA,CAAIlB,CAAO2D,CAAAA,CAAG,CACnC,CAAA,IAAA,CAAK,OAAO,MAAO,CAAA,KAAA,CAAMA,CAAG,EAC9B,CACF,CAAA,CAEA,IAAQ,CAAA,uBAAA,CAAoE,CAACI,CAAAA,CAAQf,CAAY,GAAA,CAC/F,KAAM,CAAE,EAAA9B,CAAAA,CAAG,EAAI8B,CACXR,CAAAA,eAAAA,CAAgBQ,CAAO,CAAA,CACzB,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,iBAAkBM,CAAE,CAAA,CAAG,EAAE,CAC7CuB,CAAAA,cAAAA,CAAeO,CAAO,CAAA,EAC/B,KAAK,MAAO,CAAA,IAAA,CAAKpC,WAAY,CAAA,gBAAA,CAAkBM,CAAE,CAAA,CAAG,CAAE,KAAA,CAAO8B,EAAQ,KAAM,CAAC,EAEhF,CAAA,CAEA,IAAQ,CAAA,oBAAA,CAA8D,MAAOhD,CAAAA,CAAOgD,IAAY,CAC9F,KAAM,CAAE,EAAA,CAAA9B,CAAG,CAAA,CAAI8B,CACf,CAAA,GAAI,CACF,IAAK,CAAA,WAAA,CAAY,CAAE,KAAA,CAAAhD,CAAM,CAAC,CAC1B,CAAA,MAAM,KAAK,UAA6BkB,CAAAA,CAAAA,CAAIlB,CAAO,CAAA,CAAA,CAAI,CACvD,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,IAAK,CAAA,cAAA,CAAgB,CAAE,EAAA,CAAAkB,CAAI,CAAA,KAAA,CAAAlB,CAAM,CAAC,EACvD,CAAS2D,MAAAA,CAAAA,CAAP,CACA,MAAM,IAAK,CAAA,SAAA,CAAUzC,CAAIlB,CAAAA,CAAAA,CAAO2D,CAAG,CACnC,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,KAAMA,CAAAA,CAAG,EAC9B,CACF,EAEA,IAAQ,CAAA,qBAAA,CAAgE,CAACI,CAAAA,CAAQf,CAAY,GAAA,CAC3F,KAAM,CAAE,GAAA9B,CAAG,CAAA,CAAI8B,CAGf,CAAA,UAAA,CAAW,IAAM,CACXR,eAAgBQ,CAAAA,CAAO,EACzB,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,cAAgBM,CAAAA,CAAE,CAAG,CAAA,EAAE,CAC3CuB,CAAAA,cAAAA,CAAeO,CAAO,CAAA,EAC/B,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,eAAgBM,CAAE,CAAA,CAAG,CAAE,KAAA,CAAO8B,CAAQ,CAAA,KAAM,CAAC,EAE9E,CAAG,CAAA,GAAG,EACR,CAAA,CAEA,IAAQ,CAAA,sBAAA,CAAkE,MACxEhD,CAAAA,CACAgD,IACG,CACH,KAAM,CAAE,EAAA,CAAA9B,CAAG,CAAA,CAAI8B,CACf,CAAA,GAAI,CACF,IAAK,CAAA,iBAAA,CAAkB,CAAE,KAAA,CAAAhD,CAAO,CAAA,MAAA,CAAQgD,CAAQ,CAAA,MAAO,CAAC,CAExD,CAAA,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAKgB,cAAe,CAAA,OAAA,CAAS,SAAY,CAChE,MAAM,IAAK,CAAA,aAAA,CAAchE,CAAK,EAChC,CAAC,CAAA,CACD,MAAM,IAAK,CAAA,UAAA,CAA+BkB,CAAIlB,CAAAA,CAAAA,CAAO,CAAI,CAAA,CAAA,CACzD,IAAK,CAAA,MAAA,CAAO,OAAO,IAAK,CAAA,gBAAA,CAAkB,CAAE,EAAA,CAAAkB,CAAI,CAAA,KAAA,CAAAlB,CAAM,CAAC,EACzD,CAAS2D,MAAAA,CAAAA,CAAP,CACA,MAAM,IAAK,CAAA,SAAA,CAAUzC,CAAIlB,CAAAA,CAAAA,CAAO2D,CAAG,CAAA,CACnC,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA,CAAMA,CAAG,EAC9B,CACF,CAEA,CAAA,IAAA,CAAQ,gBAAsD,CAAA,MAAO3D,CAAOgD,CAAAA,CAAAA,GAAY,CACtF,KAAM,CAAE,EAAA9B,CAAAA,CAAAA,CAAI,MAAA3B,CAAAA,CAAO,CAAIyD,CAAAA,CAAAA,CACvB,GAAI,CACF,KAAK,cAAetD,CAAAA,CAAAA,CAAA,CAAE,KAAA,CAAAM,CAAUT,CAAAA,CAAAA,CAAAA,CAAQ,CACxC,CAAA,MAAM,KAAK,wBAAyB,CAAA,CAAE,EAAA2B,CAAAA,CAAAA,CAAI,KAAAlB,CAAAA,CAAAA,CAAO,MAAAT,CAAAA,CAAO,CAAC,CACzD,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,IAAK,CAAA,iBAAA,CAAmB,CAAE,EAAA,CAAA2B,EAAI,KAAAlB,CAAAA,CAAAA,CAAO,MAAAT,CAAAA,CAAO,CAAC,EAClE,CAASoE,MAAAA,CAAAA,CAAP,CACA,MAAM,IAAA,CAAK,SAAUzC,CAAAA,CAAAA,CAAIlB,CAAO2D,CAAAA,CAAG,CACnC,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,KAAMA,CAAAA,CAAG,EAC9B,CACF,CAEA,CAAA,IAAA,CAAQ,yBAAsE,CAC5EI,CAAAA,CACAf,CACG,GAAA,CACH,KAAM,CAAE,EAAA9B,CAAAA,CAAG,EAAI8B,CACXR,CAAAA,eAAAA,CAAgBQ,CAAO,CAAA,CACzB,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,kBAAmBM,CAAE,CAAA,CAAG,CAAE,MAAA,CAAQ8B,CAAQ,CAAA,MAAO,CAAC,CAAA,CACtEP,eAAeO,CAAO,CAAA,EAC/B,IAAK,CAAA,MAAA,CAAO,IAAKpC,CAAAA,WAAAA,CAAY,iBAAmBM,CAAAA,CAAE,EAAG,CAAE,KAAA,CAAO8B,CAAQ,CAAA,KAAM,CAAC,EAEjF,CAEA,CAAA,IAAA,CAAQ,sBAAgE,MACtEhD,CAAAA,CACAgD,CACG,GAAA,CACH,KAAM,CAAE,EAAA9B,CAAAA,CAAAA,CAAI,OAAA3B,CAAO,CAAA,CAAIyD,CACvB,CAAA,GAAI,CACF,IAAA,CAAK,WAAYtD,CAAAA,CAAAA,CAAA,CAAE,KAAA,CAAAM,CAAUT,CAAAA,CAAAA,CAAAA,CAAQ,CACrC,CAAA,IAAA,CAAK,MAAO,CAAA,MAAA,CAAO,KAAK,eAAiB,CAAA,CAAE,EAAA2B,CAAAA,CAAAA,CAAI,KAAAlB,CAAAA,CAAAA,CAAO,MAAAT,CAAAA,CAAO,CAAC,EAChE,CAAA,MAASoE,CAAP,CAAA,CACA,MAAM,IAAA,CAAK,SAAUzC,CAAAA,CAAAA,CAAIlB,EAAO2D,CAAG,CAAA,CACnC,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,KAAA,CAAMA,CAAG,EAC9B,CACF,CA6GA,CAAA,IAAA,CAAQ,cAAkD,CAAA,MAAOpE,CAAW,EAAA,CAC1E,GAAI,CAAC0E,cAAc1E,CAAM,CAAA,CAAG,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,iBAClB,oBACA,CAAA,CAAA,kBAAA,EAAqB,IAAK,CAAA,SAAA,CAAU1B,CAAM,CAAA,CAAA,CAC5C,CACA,CAAA,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,YAAArB,CAAAA,CAAAA,CAAc,kBAAAC,CAAAA,CAAAA,CAAoB,kBAAAC,CAAAA,CAAAA,CAAoB,iBAAAC,CAAAA,CAAAA,CAAmB,MAAAC,CAAAA,CAAO,EACtFR,CAGF,CAAA,GAFK2E,WAAYvE,CAAAA,CAAY,CAAG,EAAA,MAAM,IAAK,CAAA,mBAAA,CAAoBA,CAAY,CAEvE,CAAA,CAACwE,aAAcpE,CAAAA,CAAAA,CAAQ,CAAI,CAAA,CAAA,CAAG,CAChC,KAAM,CAAE,OAAAiB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,oBAAsB,CAAA,CAAA,kBAAA,EAAqBlB,CAAQ,CAAA,CAAA,CAAA,CACxF,MAAM,IAAI,KAAA,CAAMiB,CAAO,CACzB,CAGI,CAACkD,WAAYtE,CAAAA,CAAkB,GAAK4B,aAAc5B,CAAAA,CAAkB,CAAM,GAAA,CAAA,EAC5E,IAAK,CAAA,kBAAA,CAAmBA,CAAoB,CAAA,oBAAoB,EAI9D,CAACsE,WAAAA,CAAYrE,CAAkB,CAAA,EAAK2B,aAAc3B,CAAAA,CAAkB,CAAM,GAAA,CAAA,EAC5E,KAAK,kBAAmBA,CAAAA,CAAAA,CAAoB,oBAAoB,CAAA,CAI7DqE,WAAYpE,CAAAA,CAAiB,CAChC,EAAA,IAAA,CAAK,oBAAqBA,CAAAA,CAAAA,CAAmB,mBAAmB,EAEpE,CAEA,CAAA,IAAA,CAAQ,kBAAqB,CAAA,CAC3BwB,EACA8C,CACG,GAAA,CACH,MAAMC,CAAAA,CAA+BC,yBAA0BhD,CAAAA,CAAAA,CAAY,WAAa8C,CAAAA,CAAI,EAC5F,GAAIC,CAAAA,CAA8B,MAAM,IAAI,KAAMA,CAAAA,CAAAA,CAA6B,OAAO,CACxF,EAEA,IAAQ,CAAA,cAAA,CAAkD,MAAO9E,CAAAA,EAAW,CAC1E,GAAI,CAAC0E,aAAAA,CAAc1E,CAAM,CACvB,CAAA,MAAM,IAAI,KAAA,CACR0B,gBAAiB,CAAA,oBAAA,CAAsB,CAAqB1B,kBAAAA,EAAAA,CAAAA,CAAAA,CAAQ,EAAE,OACxE,CAAA,CACF,KAAM,CAAE,EAAA2B,CAAAA,CAAAA,CAAI,UAAAI,CAAAA,CAAAA,CAAY,cAAAD,CAAe,CAAA,iBAAA,CAAAvB,CAAkB,CAAA,CAAIP,CAC7D,CAAA,MAAM,IAAK,CAAA,iBAAA,CAAkB2B,CAAE,CAC/B,CAAA,MAAMZ,CAAW,CAAA,IAAA,CAAK,MAAO,CAAA,QAAA,CAAS,GAAIY,CAAAA,CAAE,CACtCqD,CAAAA,CAAAA,CAAuBC,iBAAkBlD,CAAAA,CAAAA,CAAY,WAAW,CAAA,CACtE,GAAIiD,CAAAA,CAAsB,MAAM,IAAI,KAAA,CAAMA,CAAqB,CAAA,OAAO,CACtE,CAAA,MAAME,CAA4BC,CAAAA,sBAAAA,CAChCpE,EAAS,kBACTgB,CAAAA,CAAAA,CACA,WACA,CAAA,oBACF,CACA,CAAA,GAAImD,CAA2B,CAAA,MAAM,IAAI,KAAMA,CAAAA,CAAAA,CAA0B,OAAO,CAAA,CAChF,GAAI,CAACE,aAActD,CAAAA,CAAAA,CAAe,EAAI,CAAG,CAAA,CACvC,KAAM,CAAE,OAAAL,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,qBACA,CAA4BI,yBAAAA,EAAAA,CAAAA,CAAAA,CAC9B,CACA,CAAA,MAAM,IAAI,KAAA,CAAML,CAAO,CACzB,CAIA,GAAI,MAAA,CAAO,IAAKM,CAAAA,CAAU,CAAE,CAAA,MAAA,CAAS,MAAO,CAAA,IAAA,CAAKhB,EAAS,kBAAkB,CAAA,CAAE,MAAQ,CAAA,CAEpF,MAAMsE,CAAAA,CAAuB,MAAO,CAAA,IAAA,CAAKtE,CAAS,CAAA,kBAAkB,CAAE,CAAA,MAAA,CACnEuE,CAAcvD,EAAAA,CAAAA,CAAWuD,CAAS,CACrC,EACMC,CAAyB,CAAA,EAC/B,CAAA,IAAA,MAAWC,CAAOzE,IAAAA,CAAAA,CAAS,kBACrBsE,CAAAA,CAAAA,CAAqB,SAASG,CAAG,CAAA,GACnCD,CAAuBC,CAAAA,CAAG,CAAIzE,CAAAA,CAAAA,CAAS,kBAAmByE,CAAAA,CAAG,GAGjE,MAAMN,CAAAA,CAA4BC,sBAChCI,CAAAA,CAAAA,CACAxD,CACA,CAAA,WAAA,CACA,oBACF,CAAA,CACA,GAAImD,CAA2B,CAAA,MAAM,IAAI,KAAA,CAAMA,CAA0B,CAAA,OAAO,CAClF,CAEKP,YAAYpE,CAAiB,CAAA,EAChC,IAAK,CAAA,oBAAA,CAAqBA,CAAmB,CAAA,mBAAmB,EAEpE,CAAA,CAEA,KAAQ,aAAgD,CAAA,MAAOP,CAAW,EAAA,CACxE,GAAI,CAAC0E,aAAc1E,CAAAA,CAAM,EAAG,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,oBAAA,CAAsB,CAAoB1B,iBAAAA,EAAAA,CAAAA,CAAAA,CAAQ,CACvF,CAAA,MAAM,IAAI,KAAA,CAAMyB,CAAO,CACzB,CACA,KAAM,CAAE,EAAAE,CAAAA,CAAAA,CAAI,MAAAgB,CAAAA,CAAO,CAAI3C,CAAAA,CAAAA,CAEvB,GADA,MAAM,IAAA,CAAK,iBAAkB2B,CAAAA,CAAE,CAC3B,CAAA,CAAC8D,kBAAmB9C,CAAAA,CAAM,EAAG,CAC/B,KAAM,CAAE,OAAA,CAAAlB,CAAQ,CAAA,CAAIC,gBAClB,CAAA,oBAAA,CACA,oBAAoB,IAAK,CAAA,SAAA,CAAUiB,CAAM,CAAA,CAAA,CAC3C,CACA,CAAA,MAAM,IAAI,KAAA,CAAMlB,CAAO,CACzB,CACF,CAEA,CAAA,IAAA,CAAQ,2BAA6EzB,CAAAA,CAAAA,EAAW,CAC9F,GAAI,CAAC0E,aAAc1E,CAAAA,CAAM,CAAG,CAAA,CAC1B,KAAM,CAAE,OAAAyB,CAAAA,CAAQ,EAAIC,gBAClB,CAAA,oBAAA,CACA,CAAoC1B,iCAAAA,EAAAA,CAAAA,CAAAA,CACtC,CACA,CAAA,MAAM,IAAI,KAAA,CAAMyB,CAAO,CACzB,CACA,KAAM,CAAE,KAAA,CAAA6C,CAAO,CAAA,UAAA,CAAAC,EAAY,UAAAxC,CAAAA,CAAAA,CAAY,MAAAH,CAAAA,CAAO,CAAI5B,CAAAA,CAAAA,CAClD,GAAI,CAAC0F,aAAapB,CAAK,CAAA,CAAG,CACxB,KAAM,CAAE,OAAA,CAAA7C,CAAQ,CAAA,CAAIC,iBAClB,oBACA,CAAA,4DACF,CACA,CAAA,MAAM,IAAI,KAAA,CAAMD,CAAO,CACzB,CACA,MAAMkE,CAAAA,CAAuBC,iBAAkBrB,CAAAA,CAAAA,CAAY,0BAA0B,CAAA,CACrF,GAAIoB,CAAAA,CAAsB,MAAM,IAAI,KAAA,CAAMA,CAAqB,CAAA,OAAO,CACtE,CAAA,MAAMX,CAAuBC,CAAAA,iBAAAA,CAAkBlD,EAAY,0BAA0B,CAAA,CACrF,GAAIiD,CAAAA,CAAsB,MAAM,IAAI,KAAMA,CAAAA,CAAAA,CAAqB,OAAO,CACtE,CAAA,GAAIf,SAAUrC,CAAAA,CAAM,CAAG,CAAA,CACrB,KAAM,CAAE,OAAAH,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,SAAW,CAAA,0BAA0B,CAC1E,CAAA,MAAM,IAAI,KAAMD,CAAAA,CAAO,CACzB,CACF,CAEA,CAAA,IAAA,CAAQ,aAAgD,CAAA,MAAOzB,GAAW,CACxE,GAAI,CAAC0E,aAAAA,CAAc1E,CAAM,CAAA,CAAG,CAC1B,KAAM,CAAE,OAAAyB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,oBAAsB,CAAA,CAAA,iBAAA,EAAoB1B,CAAQ,CAAA,CAAA,CAAA,CACvF,MAAM,IAAI,KAAA,CAAMyB,CAAO,CACzB,CACA,KAAM,CAAE,KAAA,CAAAhB,EAAO,UAAAsB,CAAAA,CAAW,CAAI/B,CAAAA,CAAAA,CAC9B,MAAM,IAAA,CAAK,mBAAoBS,CAAAA,CAAK,EACpC,MAAMc,CAAAA,CAAU,IAAK,CAAA,MAAA,CAAO,OAAQ,CAAA,GAAA,CAAId,CAAK,CAAA,CACvCuE,EAAuBC,iBAAkBlD,CAAAA,CAAAA,CAAY,UAAU,CAAA,CACrE,GAAIiD,CAAAA,CAAsB,MAAM,IAAI,KAAMA,CAAAA,CAAAA,CAAqB,OAAO,CAAA,CACtE,MAAME,CAAAA,CAA4BC,sBAChC5D,CAAAA,CAAAA,CAAQ,mBACRQ,CACA,CAAA,UAAA,CACA,oBACF,CAAA,CACA,GAAImD,CAAAA,CAA2B,MAAM,IAAI,MAAMA,CAA0B,CAAA,OAAO,CAElF,CAAA,CAEA,IAAQ,CAAA,aAAA,CAAgD,MAAOlF,CAAAA,EAAW,CACxE,GAAI,CAAC0E,aAAc1E,CAAAA,CAAM,CAAG,CAAA,CAC1B,KAAM,CAAE,QAAAyB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,oBAAA,CAAsB,CAAoB1B,iBAAAA,EAAAA,CAAAA,CAAAA,CAAQ,CACvF,CAAA,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,KAAAhB,CAAAA,CAAM,EAAIT,CAClB,CAAA,MAAM,IAAK,CAAA,mBAAA,CAAoBS,CAAK,EAEtC,CAEA,CAAA,IAAA,CAAQ,eAAkD,MAAOT,CAAAA,EAAW,CAC1E,GAAI,CAAC0E,aAAAA,CAAc1E,CAAM,CAAA,CAAG,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,oBAAA,CAAsB,qBAAqB1B,CAAQ,CAAA,CAAA,CAAA,CACxF,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,KAAA,CAAAhB,CAAO,CAAA,OAAA,CAAAoC,CAAS,CAAA,OAAA,CAAAD,CAAS,CAAA,MAAA,CAAAhB,CAAO,CAAI5B,CAAAA,CAAAA,CAC5C,MAAM,IAAA,CAAK,mBAAoBS,CAAAA,CAAK,CACpC,CAAA,KAAM,CAAE,UAAAsB,CAAAA,CAAW,CAAI,CAAA,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,GAAItB,CAAAA,CAAK,EACpD,GAAI,CAACoF,wBAAyB9D,CAAAA,CAAAA,CAAYa,CAAO,CAAA,CAAG,CAClD,KAAM,CAAE,OAAAnB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,oBAAsB,CAAA,CAAA,mBAAA,EAAsBkB,CAAS,CAAA,CAAA,CAAA,CAC1F,MAAM,IAAI,KAAA,CAAMnB,CAAO,CACzB,CACA,GAAI,CAACqE,cAAAA,CAAejD,CAAO,CAAA,CAAG,CAC5B,KAAM,CAAE,OAAA,CAAApB,CAAQ,CAAA,CAAIC,iBAClB,oBACA,CAAA,CAAA,UAAA,EAAa,IAAK,CAAA,SAAA,CAAUmB,CAAO,CAAA,CAAA,CACrC,CACA,CAAA,MAAM,IAAI,KAAMpB,CAAAA,CAAO,CACzB,CACA,GAAI,CAACsE,wBAAyBhE,CAAAA,CAAAA,CAAYa,EAASC,CAAQ,CAAA,MAAM,CAAG,CAAA,CAClE,KAAM,CAAE,OAAApB,CAAAA,CAAQ,EAAIC,gBAClB,CAAA,oBAAA,CACA,CAAqBmB,kBAAAA,EAAAA,CAAAA,CAAQ,MAC/B,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,MAAMpB,CAAO,CACzB,CACA,GAAIG,CAAU,EAAA,CAACoE,oBAAqBpE,CAAAA,CAAAA,CAAQqE,iCAAiC,CAAG,CAAA,CAC9E,KAAM,CAAE,OAAAxE,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,qBACA,CAAqBE,kBAAAA,EAAAA,CAAAA,CAAAA,+CAAAA,EAAwDqE,iCAAkC,CAAA,GAAA,CAAA,KAAA,EAAWA,iCAAkC,CAAA,GAAA,CAAA,CAC9J,CACA,CAAA,MAAM,IAAI,KAAA,CAAMxE,CAAO,CACzB,CACF,CAAA,CAEA,IAAQ,CAAA,cAAA,CAAkD,MAAOzB,CAAW,EAAA,CAC1E,GAAI,CAAC0E,aAAc1E,CAAAA,CAAM,CAAG,CAAA,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,oBAAA,CAAsB,CAAqB1B,kBAAAA,EAAAA,CAAAA,CAAAA,CAAQ,EACxF,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,MAAAhB,CAAO,CAAA,QAAA,CAAAuC,CAAS,CAAA,CAAIhD,CAE5B,CAAA,GADA,MAAM,IAAA,CAAK,oBAAoBS,CAAK,CAAA,CAChC,CAACyF,eAAAA,CAAgBlD,CAAQ,CAAA,CAAG,CAC9B,KAAM,CAAE,OAAAvB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,oBACA,CAAA,CAAA,oBAAA,EAAuB,IAAK,CAAA,SAAA,CAAUsB,CAAQ,CAChD,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,KAAMvB,CAAAA,CAAO,CACzB,CACF,CAEA,CAAA,IAAA,CAAQ,WAA4C,CAAA,MAAOzB,CAAW,EAAA,CACpE,GAAI,CAAC0E,cAAc1E,CAAM,CAAA,CAAG,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,iBAAiB,oBAAsB,CAAA,CAAA,eAAA,EAAkB1B,CAAQ,CAAA,CAAA,CAAA,CACrF,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,KAAA,CAAAhB,CAAM,CAAA,CAAIT,CAClB,CAAA,MAAM,KAAK,4BAA6BS,CAAAA,CAAK,EAC/C,CAAA,CAEA,IAAQ,CAAA,WAAA,CAA4C,MAAOT,CAAAA,EAAW,CACpE,GAAI,CAAC0E,aAAc1E,CAAAA,CAAM,CAAG,CAAA,CAC1B,KAAM,CAAE,QAAAyB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,oBAAA,CAAsB,CAAkB1B,eAAAA,EAAAA,CAAAA,CAAAA,CAAQ,CACrF,CAAA,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,KAAAhB,CAAAA,CAAAA,CAAO,KAAA0C,CAAAA,CAAAA,CAAO,OAAAP,CAAAA,CAAQ,CAAI5C,CAAAA,CAAAA,CAClC,MAAM,IAAA,CAAK,oBAAoBS,CAAK,CAAA,CACpC,KAAM,CAAE,UAAAsB,CAAAA,CAAW,CAAI,CAAA,IAAA,CAAK,OAAO,OAAQ,CAAA,GAAA,CAAItB,CAAK,CAAA,CACpD,GAAI,CAACoF,wBAAyB9D,CAAAA,CAAAA,CAAYa,CAAO,CAAG,CAAA,CAClD,KAAM,CAAE,OAAAnB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,qBAAsB,CAAmBkB,gBAAAA,EAAAA,CAAAA,CAAAA,CAAS,CACvF,CAAA,MAAM,IAAI,KAAA,CAAMnB,CAAO,CACzB,CACA,GAAI,CAAC0E,YAAahD,CAAAA,CAAK,CAAG,CAAA,CACxB,KAAM,CAAE,QAAA1B,CAAQ,CAAA,CAAIC,gBAClB,CAAA,oBAAA,CACA,CAAiB,cAAA,EAAA,IAAA,CAAK,SAAUyB,CAAAA,CAAK,GACvC,CACA,CAAA,MAAM,IAAI,KAAA,CAAM1B,CAAO,CACzB,CACA,GAAI,CAAC2E,sBAAAA,CAAuBrE,CAAYa,CAAAA,CAAAA,CAASO,CAAM,CAAA,IAAI,CAAG,CAAA,CAC5D,KAAM,CAAE,OAAA,CAAA1B,CAAQ,CAAA,CAAIC,gBAClB,CAAA,oBAAA,CACA,CAAiB,cAAA,EAAA,IAAA,CAAK,UAAUyB,CAAK,CAAA,CAAA,CACvC,CACA,CAAA,MAAM,IAAI,KAAA,CAAM1B,CAAO,CACzB,CACF,CAEA,CAAA,IAAA,CAAQ,iBAAwD,CAAA,MAAOzB,CAAW,EAAA,CAChF,GAAI,CAAC0E,cAAc1E,CAAM,CAAA,CAAG,CAC1B,KAAM,CAAE,OAAA,CAAAyB,CAAQ,CAAA,CAAIC,iBAAiB,oBAAsB,CAAA,CAAA,qBAAA,EAAwB1B,CAAQ,CAAA,CAAA,CAAA,CAC3F,MAAM,IAAI,KAAMyB,CAAAA,CAAO,CACzB,CACA,KAAM,CAAE,KAAA,CAAAhB,CAAM,CAAA,CAAIT,CAClB,CAAA,MAAM,KAAK,4BAA6BS,CAAAA,CAAK,EAC/C,CAAA,CAEA,IAAQ,CAAA,oBAAA,CAAuB,CAAC4F,CAAAA,CAA6CxB,CAAiB,GAAA,CAC5F,MAAO,CAAA,MAAA,CAAOwB,CAAU,CAAA,CAAE,OAASC,CAAAA,CAAAA,EAAa,CAC9C,GAAI,CAAClB,aAAckB,CAAAA,CAAAA,CAAU,CAAK,CAAA,CAAA,CAAG,CACnC,KAAM,CAAE,OAAA7E,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,oBACA,CAAA,CAAA,EAAGmD,CAA4D,CAAA,qDAAA,EAAA,IAAA,CAAK,UAAUyB,CAAQ,CAAA,CAAA,CACxF,CACA,CAAA,MAAM,IAAI,KAAA,CAAM7E,CAAO,CACzB,CACF,CAAC,EACH,EA/jCA,CAuXQ,aAAgB,EAAA,CACtB,GAAI,CAAC,KAAK,WAAa,CAAA,CACrB,KAAM,CAAE,OAAAA,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,kBAAmB,IAAK,CAAA,IAAI,CACjE,CAAA,MAAM,IAAI,KAAA,CAAMD,CAAO,CACzB,CACF,CAIQ,qBAAA,EAAwB,CAC9B,IAAA,CAAK,MAAO,CAAA,IAAA,CAAK,OAAQ,CAAA,EAAA,CACvBgD,cAAe,CAAA,OAAA,CACf,MAAOtB,CAAAA,EAAqC,CAC1C,KAAM,CAAE,KAAA,CAAA1C,EAAO,OAAAgB,CAAAA,CAAQ,CAAI0B,CAAAA,CAAAA,CAG3B,GAAI,IAAA,CAAK,mBAAoB,CAAA,QAAA,CAAS,KAAK,MAAO,CAAA,IAAA,CAAK,MAAO,CAAA,cAAA,CAAe1B,CAAO,CAAC,CACnF,CAAA,OAGF,MAAMgC,CAAU,CAAA,MAAM,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,MAAA,CAAO,MAAOhD,CAAAA,CAAAA,CAAOgB,CAAO,CAC/D8E,CAAAA,gBAAAA,CAAiB9C,CAAO,CAAA,EAC1B,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,IAAIhD,CAAOgD,CAAAA,CAAO,CAC3C,CAAA,IAAA,CAAK,mBAAoB,CAAA,CAAE,KAAAhD,CAAAA,CAAAA,CAAO,QAAAgD,CAAQ,CAAC,CAClC+C,EAAAA,iBAAAA,CAAkB/C,CAAO,CAAA,GAClC,MAAM,IAAA,CAAK,OAAO,IAAK,CAAA,OAAA,CAAQ,OAAQA,CAAAA,CAAO,CAC9C,CAAA,IAAA,CAAK,oBAAqB,CAAA,CAAE,KAAAhD,CAAAA,CAAAA,CAAO,OAAAgD,CAAAA,CAAQ,CAAC,CAAA,EAEhD,CACF,EACF,CAiTQ,qBAAwB,EAAA,CAC9B,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,EAAGgD,CAAAA,cAAAA,CAAe,QAAS,MAAOtD,CAAAA,EAAmC,CAC5F,KAAM,CAAE,KAAA,CAAA1C,CAAO,CAAA,EAAA,CAAAkB,CAAG,CAAI+E,CAAAA,kBAAAA,CAAmBvD,CAAM,CAAA,MAAM,CACrD,CAAA,GAAIxB,CAAM,EAAA,IAAA,CAAK,OAAO,cAAe,CAAA,IAAA,CAAK,QAASA,CAAAA,CAAE,CACnD,CAAA,OAAO,MAAM,IAAA,CAAK,4BAA4BA,CAAID,CAAAA,gBAAAA,CAAiB,SAAS,CAAA,CAAG,CAAI,CAAA,CAAA,CAGjFjB,CACE,CAAA,IAAA,CAAK,OAAO,OAAQ,CAAA,IAAA,CAAK,QAASA,CAAAA,CAAK,CACzC,GAAA,MAAM,IAAK,CAAA,aAAA,CAAcA,EAAO,CAAI,CAAA,CAAA,CACpC,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,IAAA,CAAK,gBAAkB,CAAA,CAAE,KAAAA,CAAAA,CAAM,CAAC,CAAA,CAAA,CAE5CkB,CACT,GAAA,MAAM,IAAK,CAAA,cAAA,CAAeA,EAAI,CAAI,CAAA,CAAA,CAClC,IAAK,CAAA,MAAA,CAAO,MAAO,CAAA,IAAA,CAAK,iBAAmB,CAAA,CAAE,GAAAA,CAAG,CAAC,CAErD,EAAA,CAAC,EACH,CAGQ,mBAAoBlB,CAAAA,CAAAA,CAAY,CACtC,GAAI,CAAC2E,aAAc3E,CAAAA,CAAAA,CAAO,CAAK,CAAA,CAAA,CAAG,CAChC,KAAM,CAAE,OAAAgB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,oBACA,CAAA,CAAA,kCAAA,EAAqCjB,CACvC,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,KAAA,CAAMgB,CAAO,CACzB,CACA,GAAI,CAAC,IAAA,CAAK,OAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,IAAA,CAAK,QAAShB,CAAAA,CAAK,CAAG,CAAA,CAC3D,KAAM,CAAE,OAAA,CAAAgB,CAAQ,CAAA,CAAIC,gBAClB,CAAA,iBAAA,CACA,CAAgCjB,6BAAAA,EAAAA,CAAAA,CAAAA,CAClC,CACA,CAAA,MAAM,IAAI,KAAA,CAAMgB,CAAO,CACzB,CACA,GAAIwC,UAAU,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,GAAA,CAAIxD,CAAK,CAAA,CAAE,MAAM,CAAG,CAAA,CAElE,KAAM,CAAE,OAAAgB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,UAAW,CAAkBjB,eAAAA,EAAAA,CAAAA,CAAAA,CAAO,CACzE,CAAA,MAAM,IAAI,KAAA,CAAMgB,CAAO,CACzB,CACF,CAEA,MAAc,mBAAoBhB,CAAAA,CAAAA,CAAY,CAC5C,GAAI,CAAC2E,aAAAA,CAAc3E,EAAO,CAAK,CAAA,CAAA,CAAG,CAChC,KAAM,CAAE,OAAA,CAAAgB,CAAQ,CAAA,CAAIC,iBAClB,oBACA,CAAA,CAAA,kCAAA,EAAqCjB,CACvC,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,KAAMgB,CAAAA,CAAO,CACzB,CACA,GAAI,CAAC,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,IAAK,CAAA,QAAA,CAAShB,CAAK,CAAA,CAAG,CAC7C,KAAM,CAAE,OAAA,CAAAgB,CAAQ,CAAA,CAAIC,iBAClB,iBACA,CAAA,CAAA,6BAAA,EAAgCjB,CAClC,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,KAAMgB,CAAAA,CAAO,CACzB,CACA,GAAIwC,SAAU,CAAA,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,GAAIxD,CAAAA,CAAK,EAAE,MAAM,CAAA,CAAG,CACpD,MAAM,IAAK,CAAA,aAAA,CAAcA,CAAK,CAAA,CAC9B,KAAM,CAAE,OAAA,CAAAgB,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,SAAA,CAAW,CAAkBjB,eAAAA,EAAAA,CAAAA,CAAAA,CAAO,EACzE,MAAM,IAAI,KAAMgB,CAAAA,CAAO,CACzB,CACF,CAEA,MAAc,6BAA6BhB,CAAe,CAAA,CACxD,GAAI,IAAA,CAAK,MAAO,CAAA,OAAA,CAAQ,IAAK,CAAA,QAAA,CAASA,CAAK,CACzC,CAAA,MAAM,IAAK,CAAA,mBAAA,CAAoBA,CAAK,CAAA,CAAA,KAAA,GAC3B,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,OAAA,CAAQ,QAAS,CAAA,IAAA,CAAK,QAASA,CAAAA,CAAK,CAC9D,CAAA,IAAA,CAAK,oBAAoBA,CAAK,CAAA,CAAA,KAAA,GACpB2E,aAAc3E,CAAAA,CAAAA,CAAO,CAAK,CAAA,CAAA,CAM/B,CACL,KAAM,CAAE,OAAAgB,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAClB,iBACA,CAAA,CAAA,wCAAA,EAA2CjB,CAC7C,CAAA,CAAA,CAAA,CACA,MAAM,IAAI,KAAA,CAAMgB,CAAO,CACzB,CAZyC,KAAA,CACvC,KAAM,CAAE,QAAAA,CAAQ,CAAA,CAAIC,gBAClB,CAAA,oBAAA,CACA,CAAgDjB,6CAAAA,EAAAA,CAAAA,CAAAA,CAClD,CACA,CAAA,MAAM,IAAI,KAAMgB,CAAAA,CAAO,CACzB,CAOF,CAEA,MAAc,iBAAkBE,CAAAA,CAAAA,CAAS,CACvC,GAAI,CAACgF,SAAUhF,CAAAA,CAAE,CAAG,CAAA,CAClB,KAAM,CAAE,QAAAF,CAAQ,CAAA,CAAIC,gBAClB,CAAA,oBAAA,CACA,CAAmCC,gCAAAA,EAAAA,CAAAA,CAAAA,CACrC,CACA,CAAA,MAAM,IAAI,KAAA,CAAMF,CAAO,CACzB,CACA,GAAI,CAAC,IAAA,CAAK,OAAO,QAAS,CAAA,IAAA,CAAK,QAASE,CAAAA,CAAE,CAAG,CAAA,CAC3C,KAAM,CAAE,QAAAF,CAAQ,CAAA,CAAIC,gBAAiB,CAAA,iBAAA,CAAmB,CAA8BC,2BAAAA,EAAAA,CAAAA,CAAAA,CAAI,CAC1F,CAAA,MAAM,IAAI,KAAMF,CAAAA,CAAO,CACzB,CACA,GAAIwC,SAAAA,CAAU,IAAK,CAAA,MAAA,CAAO,SAAS,GAAItC,CAAAA,CAAE,CAAE,CAAA,MAAM,CAAG,CAAA,CAClD,MAAM,IAAA,CAAK,eAAeA,CAAE,CAAA,CAC5B,KAAM,CAAE,OAAAF,CAAAA,CAAQ,CAAIC,CAAAA,gBAAAA,CAAiB,UAAW,CAAgBC,aAAAA,EAAAA,CAAAA,CAAAA,CAAI,CACpE,CAAA,MAAM,IAAI,KAAA,CAAMF,CAAO,CACzB,CACF,CAqRF;;ACjoCa,MAAA,QAAA,SAAiBmF,KAAoC,CAChE,WAAmBC,CAAAA,CAAAA,CAAoBC,CAAgB,CAAA,CACrD,KAAMD,CAAAA,CAAAA,CAAMC,CAAQC,CAAAA,gBAAAA,CAAkBC,0BAA0B,CAAA,CAD/C,IAAAH,CAAAA,IAAAA,CAAAA,CAAAA,CAAoB,IAAAC,CAAAA,MAAAA,CAAAA,EAEvC,CACF;;ACJa,MAAA,OAAA,SAAgBF,KAAmC,CAC9D,WAAmBC,CAAAA,CAAAA,CAAoBC,CAAgB,CAAA,CACrD,KAAMD,CAAAA,CAAAA,CAAMC,CAAQG,CAAAA,eAAAA,CAAiBD,0BAA0B,CAAA,CAD9C,IAAAH,CAAAA,IAAAA,CAAAA,CAAAA,CAAoB,IAAAC,CAAAA,MAAAA,CAAAA,EAEvC,CACF;;ACLa,MAAA,cAAA,SAAuBF,KAA0C,CAC5E,WAAmBC,CAAAA,CAAAA,CAAoBC,CAAgB,CAAA,CACrD,KAAMD,CAAAA,CAAAA,CAAMC,CAAQI,CAAAA,eAAAA,CAAiBF,0BAA0B,CAAA,CAD9C,IAAAH,CAAAA,IAAAA,CAAAA,CAAAA,CAAoB,IAAAC,CAAAA,MAAAA,CAAAA,EAEvC,CACF;;ACIO,MAAMK,qBAAmBC,WAAY,CAqB1C,WAAYzD,CAAAA,CAAAA,CAAgC,CAC1C,KAAMA,CAAAA,CAAI,CArBZ,CAAA,IAAA,CAAgB,SAAW0D,oBAC3B,CAAA,IAAA,CAAgB,OAAUC,CAAAA,mBAAAA,CAC1B,KAAgB,IAA4BC,CAAAA,mBAAAA,CAAoB,IAKhE,CAAA,IAAA,CAAO,OAAgC,IAAIC,YAAAA,CA0C3C,IAAO,CAAA,EAAA,CAA8B,CAACC,CAAMC,CAAAA,CAAAA,GACnC,IAAK,CAAA,MAAA,CAAO,GAAGD,CAAMC,CAAAA,CAAQ,CAGtC,CAAA,IAAA,CAAO,KAAkC,CAACD,CAAAA,CAAMC,CACvC,GAAA,IAAA,CAAK,OAAO,IAAKD,CAAAA,CAAAA,CAAMC,CAAQ,CAAA,CAGxC,KAAO,GAAgC,CAAA,CAACD,CAAMC,CAAAA,CAAAA,GACrC,KAAK,MAAO,CAAA,GAAA,CAAID,CAAMC,CAAAA,CAAQ,EAGvC,IAAO,CAAA,cAAA,CAAsD,CAACD,CAAAA,CAAMC,IAC3D,IAAK,CAAA,MAAA,CAAO,cAAeD,CAAAA,CAAAA,CAAMC,CAAQ,CAGlD,CAAA,IAAA,CAAO,kBAA+DD,CAAAA,CAAAA,EAC7D,KAAK,MAAO,CAAA,kBAAA,CAAmBA,CAAI,CAAA,CAK5C,KAAO,OAAkC,CAAA,MAAOzH,CAAW,EAAA,CACzD,GAAI,CACF,OAAO,MAAM,IAAA,CAAK,OAAO,OAAQA,CAAAA,CAAM,CACzC,CAAA,MAASsB,EAAP,CACA,MAAA,IAAA,CAAK,MAAO,CAAA,KAAA,CAAMA,EAAM,OAAO,CAAA,CACzBA,CACR,CACF,EAEA,IAAO,CAAA,IAAA,CAA4B,MAAOtB,CAAAA,EAAW,CACnD,GAAI,CACF,OAAO,MAAM,KAAK,MAAO,CAAA,IAAA,CAAKA,CAAM,CACtC,OAASsB,CAAP,CAAA,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,MAAMA,CAAM,CAAA,OAAO,CACzBA,CAAAA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,OAAkC,CAAA,MAAOtB,GAAW,CACzD,GAAI,CACF,OAAO,MAAM,IAAK,CAAA,MAAA,CAAO,OAAQA,CAAAA,CAAM,CACzC,CAASsB,MAAAA,CAAAA,CAAP,CACA,MAAA,IAAA,CAAK,OAAO,KAAMA,CAAAA,CAAAA,CAAM,OAAO,CAAA,CACzBA,CACR,CACF,CAAA,CAEA,IAAO,CAAA,MAAA,CAAgC,MAAOtB,CAAW,EAAA,CACvD,GAAI,CACF,OAAO,MAAM,IAAA,CAAK,MAAO,CAAA,MAAA,CAAOA,CAAM,CACxC,CAAA,MAASsB,CAAP,CAAA,CACA,WAAK,MAAO,CAAA,KAAA,CAAMA,CAAM,CAAA,OAAO,EACzBA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,OAAgC,MAAOtB,CAAAA,EAAW,CACvD,GAAI,CACF,OAAO,MAAM,IAAK,CAAA,MAAA,CAAO,OAAOA,CAAM,CACxC,CAASsB,MAAAA,CAAAA,CAAP,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,KAAMA,CAAAA,CAAAA,CAAM,OAAO,CACzBA,CAAAA,CACR,CACF,CAAA,CAEA,KAAO,MAAgC,CAAA,MAAOtB,CAAW,EAAA,CACvD,GAAI,CACF,OAAO,MAAM,IAAA,CAAK,OAAO,MAAOA,CAAAA,CAAM,CACxC,CAAA,MAASsB,EAAP,CACA,MAAA,IAAA,CAAK,MAAO,CAAA,KAAA,CAAMA,EAAM,OAAO,CAAA,CACzBA,CACR,CACF,EAEA,IAAO,CAAA,OAAA,CAAkC,MAAUtB,CAAAA,EAAsC,CACvF,GAAI,CACF,OAAO,MAAM,KAAK,MAAO,CAAA,OAAA,CAAWA,CAAM,CAC5C,OAASsB,CAAP,CAAA,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,MAAMA,CAAM,CAAA,OAAO,CACzBA,CAAAA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,OAAkC,CAAA,MAAOtB,GAAW,CACzD,GAAI,CACF,OAAO,MAAM,IAAK,CAAA,MAAA,CAAO,QAAQA,CAAM,CACzC,OAASsB,CAAP,CAAA,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,MAAMA,CAAM,CAAA,OAAO,CACzBA,CAAAA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,IAA4B,CAAA,MAAOtB,GAAW,CACnD,GAAI,CACF,OAAO,MAAM,IAAK,CAAA,MAAA,CAAO,IAAKA,CAAAA,CAAM,CACtC,CAASsB,MAAAA,CAAAA,CAAP,CACA,MAAA,IAAA,CAAK,OAAO,KAAMA,CAAAA,CAAAA,CAAM,OAAO,CAAA,CACzBA,CACR,CACF,CAAA,CAEA,IAAO,CAAA,IAAA,CAA4B,MAAOtB,CAAW,EAAA,CACnD,GAAI,CACF,OAAO,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,CAAKA,CAAM,CACtC,CAAA,MAASsB,CAAP,CAAA,CACA,WAAK,MAAO,CAAA,KAAA,CAAMA,CAAM,CAAA,OAAO,EACzBA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,WAAwC,MAAOtB,CAAAA,EAAW,CAC/D,GAAI,CACF,OAAO,MAAM,IAAK,CAAA,MAAA,CAAO,WAAWA,CAAM,CAC5C,CAASsB,MAAAA,CAAAA,CAAP,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,KAAMA,CAAAA,CAAAA,CAAM,OAAO,CACzBA,CAAAA,CACR,CACF,CAAA,CAEA,KAAO,IAA6BtB,CAAAA,CAAAA,EAAW,CAC7C,GAAI,CACF,OAAO,IAAA,CAAK,MAAO,CAAA,IAAA,CAAKA,CAAM,CAChC,CAAA,MAASsB,CAAP,CAAA,CACA,WAAK,MAAO,CAAA,KAAA,CAAMA,CAAM,CAAA,OAAO,EACzBA,CACR,CACF,CAEA,CAAA,IAAA,CAAO,0BAAsE,IAAM,CACjF,GAAI,CACF,OAAO,IAAK,CAAA,MAAA,CAAO,yBAA0B,EAC/C,OAASA,CAAP,CAAA,CACA,MAAK,IAAA,CAAA,MAAA,CAAO,MAAMA,CAAM,CAAA,OAAO,CACzBA,CAAAA,CACR,CACF,CAnKE,CAAA,IAAA,CAAK,IAAOqC,CAAAA,CAAAA,CAAAA,EAAA,YAAAA,CAAM,CAAA,IAAA,GAAQ4D,mBAAoB,CAAA,IAAA,CAC9C,KAAK,QAAW5D,CAAAA,CAAAA,CAAAA,EAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAM,WAAYgE,cAAe,EAAA,CAEjD,MAAMb,CAAAA,CACJ,OAAOnD,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAAA,EAAM,MAAW,CAAA,EAAA,WAAA,EAAe,OAAOA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAAA,CAAM,CAAA,MAAA,CAAA,EAAW,SAC3DA,CAAK,CAAA,MAAA,CACLiE,CAAKC,CAAAA,uBAAAA,CAAwB,CAAE,KAAOlE,CAAAA,CAAAA,CAAAA,EAAA,IAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAAM,SAAU4D,mBAAoB,CAAA,MAAO,CAAC,CAAC,EAEzF,IAAK,CAAA,IAAA,CAAA,CAAO5D,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAAA,EAAM,IAAQ,GAAA,IAAImE,IAAKnE,CAAAA,CAAI,EACvC,IAAK,CAAA,MAAA,CAASoE,mBAAoBjB,CAAAA,CAAAA,CAAQ,KAAK,IAAI,CAAA,CACnD,IAAK,CAAA,OAAA,CAAU,IAAIkB,OAAQ,CAAA,IAAA,CAAK,IAAM,CAAA,IAAA,CAAK,MAAM,CACjD,CAAA,IAAA,CAAK,QAAW,CAAA,IAAIC,SAAS,IAAK,CAAA,IAAA,CAAM,IAAK,CAAA,MAAM,EACnD,IAAK,CAAA,cAAA,CAAiB,IAAIC,cAAAA,CAAe,KAAK,IAAM,CAAA,IAAA,CAAK,MAAM,CAAA,CAC/D,KAAK,MAAS,CAAA,IAAIC,MAAO,CAAA,IAAI,EAC/B,CAxBA,aAAa,IAAKxE,CAAAA,CAAAA,CAAgC,CAChD,MAAMhE,CAAAA,CAAS,IAAIwH,YAAA,CAAWxD,CAAI,CAClC,CAAA,OAAA,MAAMhE,CAAO,CAAA,UAAA,GAENA,CACT,CAqBA,IAAI,OAAA,EAAU,CACZ,OAAOyI,gBAAAA,CAAiB,IAAK,CAAA,MAAM,CACrC,CAEA,IAAI,OAAU,EAAA,CACZ,OAAO,IAAK,CAAA,IAAA,CAAK,OAAQ,CAAA,QAC3B,CAiJA,MAAc,UAAA,EAAa,CACzB,IAAA,CAAK,OAAO,KAAM,CAAA,aAAa,CAC/B,CAAA,GAAI,CACF,MAAM,IAAA,CAAK,IAAK,CAAA,KAAA,GAChB,MAAM,IAAA,CAAK,OAAQ,CAAA,IAAA,GACnB,MAAM,IAAA,CAAK,QAAS,CAAA,IAAA,GACpB,MAAM,IAAA,CAAK,cAAe,CAAA,IAAA,GAC1B,MAAM,IAAA,CAAK,MAAO,CAAA,IAAA,GAClB,IAAK,CAAA,MAAA,CAAO,IAAK,CAAA,mCAAmC,EACtD,CAAS9G,MAAAA,CAAAA,CAAP,CACA,MAAA,IAAA,CAAK,OAAO,IAAK,CAAA,mCAAmC,CACpD,CAAA,IAAA,CAAK,OAAO,KAAMA,CAAAA,CAAAA,CAAM,OAAO,CACzBA,CAAAA,CACR,CACF,CACF;;ACvNa,MAAA,UAAA,CAAa+G;;;;"}